//generated by scrips/build-augmentations.mjs
// this serves to provide a UNIQUE mapping for HtmlElementType -> Html Element Name -> Html Element Attributes
// typesript file lib.dom.d.ts already has e.g. HTMLElementTagNameMap, 
// but it does not provide unique types for each element
export const GlintSymbol: unique symbol;

declare global {

  interface HTMLAnchorElement {
    [GlintSymbol]: 'HTMLAnchorElement';
  }


  interface HTMLAreaElement {
    [GlintSymbol]: 'HTMLAreaElement';
  }


  interface HTMLAudioElement {
    [GlintSymbol]: 'HTMLAudioElement';
  }


  interface HTMLBaseElement {
    [GlintSymbol]: 'HTMLBaseElement';
  }


  interface HTMLQuoteElement {
    [GlintSymbol]: 'HTMLQuoteElement';
  }


  interface HTMLBodyElement {
    [GlintSymbol]: 'HTMLBodyElement';
  }


  interface HTMLBRElement {
    [GlintSymbol]: 'HTMLBRElement';
  }


  interface HTMLButtonElement {
    [GlintSymbol]: 'HTMLButtonElement';
  }


  interface HTMLCanvasElement {
    [GlintSymbol]: 'HTMLCanvasElement';
  }


  interface HTMLTableCaptionElement {
    [GlintSymbol]: 'HTMLTableCaptionElement';
  }


  interface HTMLTableColElement {
    [GlintSymbol]: 'HTMLTableColElement';
  }


  interface HTMLDataElement {
    [GlintSymbol]: 'HTMLDataElement';
  }


  interface HTMLDataListElement {
    [GlintSymbol]: 'HTMLDataListElement';
  }


  interface HTMLModElement {
    [GlintSymbol]: 'HTMLModElement';
  }


  interface HTMLDetailsElement {
    [GlintSymbol]: 'HTMLDetailsElement';
  }


  interface HTMLDialogElement {
    [GlintSymbol]: 'HTMLDialogElement';
  }


  interface HTMLDivElement {
    [GlintSymbol]: 'HTMLDivElement';
  }


  interface HTMLDListElement {
    [GlintSymbol]: 'HTMLDListElement';
  }


  interface HTMLEmbedElement {
    [GlintSymbol]: 'HTMLEmbedElement';
  }


  interface HTMLFieldSetElement {
    [GlintSymbol]: 'HTMLFieldSetElement';
  }


  interface HTMLFormElement {
    [GlintSymbol]: 'HTMLFormElement';
  }


  interface HTMLHeadingElement {
    [GlintSymbol]: 'HTMLHeadingElement';
  }


  interface HTMLHeadElement {
    [GlintSymbol]: 'HTMLHeadElement';
  }


  interface HTMLHRElement {
    [GlintSymbol]: 'HTMLHRElement';
  }


  interface HTMLHtmlElement {
    [GlintSymbol]: 'HTMLHtmlElement';
  }


  interface HTMLIFrameElement {
    [GlintSymbol]: 'HTMLIFrameElement';
  }


  interface HTMLImageElement {
    [GlintSymbol]: 'HTMLImageElement';
  }


  interface HTMLInputElement {
    [GlintSymbol]: 'HTMLInputElement';
  }


  interface HTMLLabelElement {
    [GlintSymbol]: 'HTMLLabelElement';
  }


  interface HTMLLegendElement {
    [GlintSymbol]: 'HTMLLegendElement';
  }


  interface HTMLLIElement {
    [GlintSymbol]: 'HTMLLIElement';
  }


  interface HTMLLinkElement {
    [GlintSymbol]: 'HTMLLinkElement';
  }


  interface HTMLMapElement {
    [GlintSymbol]: 'HTMLMapElement';
  }


  interface HTMLMenuElement {
    [GlintSymbol]: 'HTMLMenuElement';
  }


  interface HTMLMetaElement {
    [GlintSymbol]: 'HTMLMetaElement';
  }


  interface HTMLMeterElement {
    [GlintSymbol]: 'HTMLMeterElement';
  }


  interface HTMLObjectElement {
    [GlintSymbol]: 'HTMLObjectElement';
  }


  interface HTMLOListElement {
    [GlintSymbol]: 'HTMLOListElement';
  }


  interface HTMLOptGroupElement {
    [GlintSymbol]: 'HTMLOptGroupElement';
  }


  interface HTMLOptionElement {
    [GlintSymbol]: 'HTMLOptionElement';
  }


  interface HTMLOutputElement {
    [GlintSymbol]: 'HTMLOutputElement';
  }


  interface HTMLParagraphElement {
    [GlintSymbol]: 'HTMLParagraphElement';
  }


  interface HTMLPictureElement {
    [GlintSymbol]: 'HTMLPictureElement';
  }


  interface HTMLPreElement {
    [GlintSymbol]: 'HTMLPreElement';
  }


  interface HTMLProgressElement {
    [GlintSymbol]: 'HTMLProgressElement';
  }


  interface HTMLScriptElement {
    [GlintSymbol]: 'HTMLScriptElement';
  }


  interface HTMLSelectElement {
    [GlintSymbol]: 'HTMLSelectElement';
  }


  interface HTMLSlotElement {
    [GlintSymbol]: 'HTMLSlotElement';
  }


  interface HTMLSourceElement {
    [GlintSymbol]: 'HTMLSourceElement';
  }


  interface HTMLSpanElement {
    [GlintSymbol]: 'HTMLSpanElement';
  }


  interface HTMLStyleElement {
    [GlintSymbol]: 'HTMLStyleElement';
  }


  interface HTMLTableElement {
    [GlintSymbol]: 'HTMLTableElement';
  }


  interface HTMLTableSectionElement {
    [GlintSymbol]: 'HTMLTableSectionElement';
  }


  interface HTMLTableCellElement {
    [GlintSymbol]: 'HTMLTableCellElement';
  }


  interface HTMLTemplateElement {
    [GlintSymbol]: 'HTMLTemplateElement';
  }


  interface HTMLTextAreaElement {
    [GlintSymbol]: 'HTMLTextAreaElement';
  }


  interface HTMLTimeElement {
    [GlintSymbol]: 'HTMLTimeElement';
  }


  interface HTMLTitleElement {
    [GlintSymbol]: 'HTMLTitleElement';
  }


  interface HTMLTableRowElement {
    [GlintSymbol]: 'HTMLTableRowElement';
  }


  interface HTMLTrackElement {
    [GlintSymbol]: 'HTMLTrackElement';
  }


  interface HTMLUListElement {
    [GlintSymbol]: 'HTMLUListElement';
  }


  interface HTMLVideoElement {
    [GlintSymbol]: 'HTMLVideoElement';
  }


  interface SVGAElement {
    [GlintSymbol]: 'SVGAElement';
  }


  interface SVGAnimateElement {
    [GlintSymbol]: 'SVGAnimateElement';
  }


  interface SVGAnimateMotionElement {
    [GlintSymbol]: 'SVGAnimateMotionElement';
  }


  interface SVGAnimateTransformElement {
    [GlintSymbol]: 'SVGAnimateTransformElement';
  }


  interface SVGCircleElement {
    [GlintSymbol]: 'SVGCircleElement';
  }


  interface SVGClipPathElement {
    [GlintSymbol]: 'SVGClipPathElement';
  }


  interface SVGDefsElement {
    [GlintSymbol]: 'SVGDefsElement';
  }


  interface SVGDescElement {
    [GlintSymbol]: 'SVGDescElement';
  }


  interface SVGEllipseElement {
    [GlintSymbol]: 'SVGEllipseElement';
  }


  interface SVGFEBlendElement {
    [GlintSymbol]: 'SVGFEBlendElement';
  }


  interface SVGFEColorMatrixElement {
    [GlintSymbol]: 'SVGFEColorMatrixElement';
  }


  interface SVGFEComponentTransferElement {
    [GlintSymbol]: 'SVGFEComponentTransferElement';
  }


  interface SVGFECompositeElement {
    [GlintSymbol]: 'SVGFECompositeElement';
  }


  interface SVGFEConvolveMatrixElement {
    [GlintSymbol]: 'SVGFEConvolveMatrixElement';
  }


  interface SVGFEDiffuseLightingElement {
    [GlintSymbol]: 'SVGFEDiffuseLightingElement';
  }


  interface SVGFEDisplacementMapElement {
    [GlintSymbol]: 'SVGFEDisplacementMapElement';
  }


  interface SVGFEDistantLightElement {
    [GlintSymbol]: 'SVGFEDistantLightElement';
  }


  interface SVGFEDropShadowElement {
    [GlintSymbol]: 'SVGFEDropShadowElement';
  }


  interface SVGFEFloodElement {
    [GlintSymbol]: 'SVGFEFloodElement';
  }


  interface SVGFEFuncAElement {
    [GlintSymbol]: 'SVGFEFuncAElement';
  }


  interface SVGFEFuncBElement {
    [GlintSymbol]: 'SVGFEFuncBElement';
  }


  interface SVGFEFuncGElement {
    [GlintSymbol]: 'SVGFEFuncGElement';
  }


  interface SVGFEFuncRElement {
    [GlintSymbol]: 'SVGFEFuncRElement';
  }


  interface SVGFEGaussianBlurElement {
    [GlintSymbol]: 'SVGFEGaussianBlurElement';
  }


  interface SVGFEImageElement {
    [GlintSymbol]: 'SVGFEImageElement';
  }


  interface SVGFEMergeElement {
    [GlintSymbol]: 'SVGFEMergeElement';
  }


  interface SVGFEMergeNodeElement {
    [GlintSymbol]: 'SVGFEMergeNodeElement';
  }


  interface SVGFEMorphologyElement {
    [GlintSymbol]: 'SVGFEMorphologyElement';
  }


  interface SVGFEOffsetElement {
    [GlintSymbol]: 'SVGFEOffsetElement';
  }


  interface SVGFEPointLightElement {
    [GlintSymbol]: 'SVGFEPointLightElement';
  }


  interface SVGFESpecularLightingElement {
    [GlintSymbol]: 'SVGFESpecularLightingElement';
  }


  interface SVGFESpotLightElement {
    [GlintSymbol]: 'SVGFESpotLightElement';
  }


  interface SVGFETileElement {
    [GlintSymbol]: 'SVGFETileElement';
  }


  interface SVGFETurbulenceElement {
    [GlintSymbol]: 'SVGFETurbulenceElement';
  }


  interface SVGFilterElement {
    [GlintSymbol]: 'SVGFilterElement';
  }


  interface SVGForeignObjectElement {
    [GlintSymbol]: 'SVGForeignObjectElement';
  }


  interface SVGGElement {
    [GlintSymbol]: 'SVGGElement';
  }


  interface SVGImageElement {
    [GlintSymbol]: 'SVGImageElement';
  }


  interface SVGLineElement {
    [GlintSymbol]: 'SVGLineElement';
  }


  interface SVGLinearGradientElement {
    [GlintSymbol]: 'SVGLinearGradientElement';
  }


  interface SVGMarkerElement {
    [GlintSymbol]: 'SVGMarkerElement';
  }


  interface SVGMaskElement {
    [GlintSymbol]: 'SVGMaskElement';
  }


  interface SVGMetadataElement {
    [GlintSymbol]: 'SVGMetadataElement';
  }


  interface SVGMPathElement {
    [GlintSymbol]: 'SVGMPathElement';
  }


  interface SVGPathElement {
    [GlintSymbol]: 'SVGPathElement';
  }


  interface SVGPatternElement {
    [GlintSymbol]: 'SVGPatternElement';
  }


  interface SVGPolygonElement {
    [GlintSymbol]: 'SVGPolygonElement';
  }


  interface SVGPolylineElement {
    [GlintSymbol]: 'SVGPolylineElement';
  }


  interface SVGRadialGradientElement {
    [GlintSymbol]: 'SVGRadialGradientElement';
  }


  interface SVGRectElement {
    [GlintSymbol]: 'SVGRectElement';
  }


  interface SVGScriptElement {
    [GlintSymbol]: 'SVGScriptElement';
  }


  interface SVGSetElement {
    [GlintSymbol]: 'SVGSetElement';
  }


  interface SVGStopElement {
    [GlintSymbol]: 'SVGStopElement';
  }


  interface SVGStyleElement {
    [GlintSymbol]: 'SVGStyleElement';
  }


  interface SVGSVGElement {
    [GlintSymbol]: 'SVGSVGElement';
  }


  interface SVGSwitchElement {
    [GlintSymbol]: 'SVGSwitchElement';
  }


  interface SVGSymbolElement {
    [GlintSymbol]: 'SVGSymbolElement';
  }


  interface SVGTextElement {
    [GlintSymbol]: 'SVGTextElement';
  }


  interface SVGTextPathElement {
    [GlintSymbol]: 'SVGTextPathElement';
  }


  interface SVGTitleElement {
    [GlintSymbol]: 'SVGTitleElement';
  }


  interface SVGTSpanElement {
    [GlintSymbol]: 'SVGTSpanElement';
  }


  interface SVGUseElement {
    [GlintSymbol]: 'SVGUseElement';
  }


  interface SVGViewElement {
    [GlintSymbol]: 'SVGViewElement';
  }
}